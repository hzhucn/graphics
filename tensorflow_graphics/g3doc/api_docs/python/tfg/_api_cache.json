#Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{
  "current_doc_full_name": "tfg.math.vector.cross", 
  "duplicate_of": {}, 
  "is_fragment": {
    "tfg": false, 
    "tfg.geometry": false, 
    "tfg.geometry.convolution": false, 
    "tfg.geometry.convolution.graph_convolution": false, 
    "tfg.geometry.convolution.graph_convolution.edge_convolution_template": false, 
    "tfg.geometry.convolution.graph_convolution.feature_steered_convolution": false, 
    "tfg.geometry.convolution.utils": false, 
    "tfg.geometry.convolution.utils.check_valid_graph_convolution_input": false, 
    "tfg.geometry.convolution.utils.convert_to_block_diag_2d": false, 
    "tfg.geometry.convolution.utils.flatten_batch_to_2d": false, 
    "tfg.geometry.convolution.utils.partition_sums_2d": false, 
    "tfg.geometry.deformation_energy": false, 
    "tfg.geometry.deformation_energy.as_conformal_as_possible": false, 
    "tfg.geometry.deformation_energy.as_conformal_as_possible.energy": false, 
    "tfg.geometry.representation": false, 
    "tfg.geometry.representation.grid": false, 
    "tfg.geometry.representation.grid.generate": false, 
    "tfg.geometry.representation.mesh": false, 
    "tfg.geometry.representation.mesh.normals": false, 
    "tfg.geometry.representation.mesh.normals.face_normals": false, 
    "tfg.geometry.representation.mesh.normals.gather_faces": false, 
    "tfg.geometry.representation.mesh.normals.vertex_normals": false, 
    "tfg.geometry.representation.point": false, 
    "tfg.geometry.representation.point.distance_to_ray": false, 
    "tfg.geometry.representation.point.project_to_ray": false, 
    "tfg.geometry.representation.ray": false, 
    "tfg.geometry.representation.ray.intersection_ray_sphere": false, 
    "tfg.geometry.representation.ray.triangulate": false, 
    "tfg.geometry.representation.triangle": false, 
    "tfg.geometry.representation.triangle.normal": false, 
    "tfg.geometry.transformation": false, 
    "tfg.geometry.transformation.axis_angle": false, 
    "tfg.geometry.transformation.axis_angle.from_euler": false, 
    "tfg.geometry.transformation.axis_angle.from_euler_with_small_angles_approximation": false, 
    "tfg.geometry.transformation.axis_angle.from_quaternion": false, 
    "tfg.geometry.transformation.axis_angle.from_rotation_matrix": false, 
    "tfg.geometry.transformation.axis_angle.from_rotation_vector": false, 
    "tfg.geometry.transformation.axis_angle.inverse": false, 
    "tfg.geometry.transformation.axis_angle.is_normalized": false, 
    "tfg.geometry.transformation.axis_angle.rotate": false, 
    "tfg.geometry.transformation.euler": false, 
    "tfg.geometry.transformation.euler.from_axis_angle": false, 
    "tfg.geometry.transformation.euler.from_quaternion": false, 
    "tfg.geometry.transformation.euler.from_rotation_matrix": false, 
    "tfg.geometry.transformation.euler.inverse": false, 
    "tfg.geometry.transformation.quaternion": false, 
    "tfg.geometry.transformation.quaternion.between_two_vectors_3d": false, 
    "tfg.geometry.transformation.quaternion.conjugate": false, 
    "tfg.geometry.transformation.quaternion.from_axis_angle": false, 
    "tfg.geometry.transformation.quaternion.from_euler": false, 
    "tfg.geometry.transformation.quaternion.from_euler_with_small_angles_approximation": false, 
    "tfg.geometry.transformation.quaternion.from_rotation_matrix": false, 
    "tfg.geometry.transformation.quaternion.inverse": false, 
    "tfg.geometry.transformation.quaternion.is_normalized": false, 
    "tfg.geometry.transformation.quaternion.multiply": false, 
    "tfg.geometry.transformation.quaternion.normalize": false, 
    "tfg.geometry.transformation.quaternion.normalized_random_uniform": false, 
    "tfg.geometry.transformation.quaternion.normalized_random_uniform_initializer": false, 
    "tfg.geometry.transformation.quaternion.relative_angle": false, 
    "tfg.geometry.transformation.quaternion.rotate": false, 
    "tfg.geometry.transformation.rotation_matrix_2d": false, 
    "tfg.geometry.transformation.rotation_matrix_2d.from_euler": false, 
    "tfg.geometry.transformation.rotation_matrix_2d.from_euler_with_small_angles_approximation": false, 
    "tfg.geometry.transformation.rotation_matrix_2d.inverse": false, 
    "tfg.geometry.transformation.rotation_matrix_2d.is_valid": false, 
    "tfg.geometry.transformation.rotation_matrix_2d.rotate": false, 
    "tfg.geometry.transformation.rotation_matrix_3d": false, 
    "tfg.geometry.transformation.rotation_matrix_3d.assert_rotation_matrix_normalized": false, 
    "tfg.geometry.transformation.rotation_matrix_3d.from_axis_angle": false, 
    "tfg.geometry.transformation.rotation_matrix_3d.from_euler": false, 
    "tfg.geometry.transformation.rotation_matrix_3d.from_euler_with_small_angles_approximation": false, 
    "tfg.geometry.transformation.rotation_matrix_3d.from_quaternion": false, 
    "tfg.geometry.transformation.rotation_matrix_3d.inverse": false, 
    "tfg.geometry.transformation.rotation_matrix_3d.is_valid": false, 
    "tfg.geometry.transformation.rotation_matrix_3d.rotate": false, 
    "tfg.geometry.transformation.rotation_matrix_common": false, 
    "tfg.geometry.transformation.rotation_matrix_common.is_valid": false, 
    "tfg.image": false, 
    "tfg.image.color_space": false, 
    "tfg.image.color_space.srgb": false, 
    "tfg.image.color_space.srgb.from_linear": false, 
    "tfg.image.color_space.srgb.to_linear": false, 
    "tfg.image.pyramid": false, 
    "tfg.image.pyramid.__builtins__": true, 
    "tfg.image.pyramid.__doc__": true, 
    "tfg.image.pyramid.__file__": true, 
    "tfg.image.pyramid.__name__": true, 
    "tfg.image.pyramid.__package__": true, 
    "tfg.image.pyramid.absolute_import": true, 
    "tfg.image.pyramid.division": true, 
    "tfg.image.pyramid.downsample": false, 
    "tfg.image.pyramid.merge": false, 
    "tfg.image.pyramid.print_function": true, 
    "tfg.image.pyramid.shape": false, 
    "tfg.image.pyramid.split": false, 
    "tfg.image.pyramid.upsample": false, 
    "tfg.math": false, 
    "tfg.math.interpolation": false, 
    "tfg.math.interpolation.bspline": false, 
    "tfg.math.interpolation.bspline.Degree": false, 
    "tfg.math.interpolation.bspline.Degree.CONSTANT": true, 
    "tfg.math.interpolation.bspline.Degree.CUBIC": true, 
    "tfg.math.interpolation.bspline.Degree.LINEAR": true, 
    "tfg.math.interpolation.bspline.Degree.QUADRATIC": true, 
    "tfg.math.interpolation.bspline.Degree.QUARTIC": true, 
    "tfg.math.interpolation.bspline.Degree.__doc__": true, 
    "tfg.math.interpolation.bspline.Degree.__members__": true, 
    "tfg.math.interpolation.bspline.Degree.__module__": true, 
    "tfg.math.interpolation.bspline.interpolate": false, 
    "tfg.math.interpolation.bspline.interpolate_with_weights": false, 
    "tfg.math.interpolation.bspline.knot_weights": false, 
    "tfg.math.interpolation.slerp": false, 
    "tfg.math.interpolation.slerp.InterpolationType": false, 
    "tfg.math.interpolation.slerp.InterpolationType.QUATERNION": true, 
    "tfg.math.interpolation.slerp.InterpolationType.VECTOR": true, 
    "tfg.math.interpolation.slerp.InterpolationType.__doc__": true, 
    "tfg.math.interpolation.slerp.InterpolationType.__members__": true, 
    "tfg.math.interpolation.slerp.InterpolationType.__module__": true, 
    "tfg.math.interpolation.slerp.interpolate": false, 
    "tfg.math.interpolation.slerp.interpolate_with_weights": false, 
    "tfg.math.interpolation.slerp.quaternion_weights": false, 
    "tfg.math.interpolation.slerp.vector_weights": false, 
    "tfg.math.interpolation.weighted": false, 
    "tfg.math.interpolation.weighted.interpolate": false, 
    "tfg.math.math_helpers": false, 
    "tfg.math.math_helpers.cartesian_to_spherical_coordinates": false, 
    "tfg.math.math_helpers.double_factorial": false, 
    "tfg.math.math_helpers.factorial": false, 
    "tfg.math.math_helpers.spherical_to_cartesian_coordinates": false, 
    "tfg.math.math_helpers.square_to_spherical_coordinates": false, 
    "tfg.math.optimizer": false, 
    "tfg.math.optimizer.levenberg_marquardt": false, 
    "tfg.math.optimizer.levenberg_marquardt.minimize": false, 
    "tfg.math.spherical_harmonics": false, 
    "tfg.math.spherical_harmonics.evaluate_legendre_polynomial": false, 
    "tfg.math.spherical_harmonics.evaluate_spherical_harmonics": false, 
    "tfg.math.spherical_harmonics.generate_l_m_permutations": false, 
    "tfg.math.spherical_harmonics.generate_l_m_zonal": false, 
    "tfg.math.spherical_harmonics.integration_product": false, 
    "tfg.math.spherical_harmonics.rotate_zonal_harmonics": false, 
    "tfg.math.spherical_harmonics.tile_zonal_coefficients": false, 
    "tfg.math.vector": false, 
    "tfg.math.vector.cross": false, 
    "tfg.math.vector.dot": false, 
    "tfg.math.vector.reflect": false, 
    "tfg.nn": false, 
    "tfg.nn.layer": false, 
    "tfg.nn.layer.graph_convolution": false, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer": false, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__call__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__delattr__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__dict__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__doc__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__format__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__getattribute__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__hash__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__init__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__module__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__new__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__reduce__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__reduce_ex__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__repr__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__setattr__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__sizeof__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__str__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__subclasshook__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.__weakref__": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.activity_regularizer": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.add_loss": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.add_metric": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.add_update": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.add_variable": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.add_weight": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.apply": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.build": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.call": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.compute_mask": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.compute_output_shape": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.count_params": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.dtype": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.dynamic": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.from_config": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_config": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_input_at": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_input_mask_at": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_input_shape_at": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_losses_for": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_output_at": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_output_mask_at": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_output_shape_at": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_updates_for": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.get_weights": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.input": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.input_mask": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.input_shape": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.losses": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.metrics": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.name": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.name_scope": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.non_trainable_variables": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.non_trainable_weights": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.output": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.output_mask": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.output_shape": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.set_weights": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.submodules": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.trainable_variables": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.trainable_weights": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.updates": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.variables": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.weights": true, 
    "tfg.nn.layer.graph_convolution.FeatureSteeredConvolutionKerasLayer.with_name_scope": true, 
    "tfg.nn.layer.graph_convolution.feature_steered_convolution_layer": false, 
    "tfg.rendering": false, 
    "tfg.rendering.camera": false, 
    "tfg.rendering.camera.orthographic": false, 
    "tfg.rendering.camera.orthographic.project": false, 
    "tfg.rendering.camera.orthographic.ray": false, 
    "tfg.rendering.camera.orthographic.unproject": false, 
    "tfg.rendering.camera.perspective": false, 
    "tfg.rendering.camera.perspective.intrinsics_from_matrix": false, 
    "tfg.rendering.camera.perspective.matrix_from_intrinsics": false, 
    "tfg.rendering.camera.perspective.project": false, 
    "tfg.rendering.camera.perspective.ray": false, 
    "tfg.rendering.camera.perspective.unproject": false, 
    "tfg.rendering.reflectance": false, 
    "tfg.rendering.reflectance.blinn_phong": false, 
    "tfg.rendering.reflectance.blinn_phong.brdf": false, 
    "tfg.rendering.reflectance.lambertian": false, 
    "tfg.rendering.reflectance.lambertian.brdf": false, 
    "tfg.rendering.reflectance.phong": false, 
    "tfg.rendering.reflectance.phong.brdf": false
  }, 
  "py_module_names": [
    "tfg"
  ]
}